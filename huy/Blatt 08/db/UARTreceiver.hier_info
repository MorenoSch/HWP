|UARTreader
LCD_rs <= lcd_driver:inst8.rs
clk_50 => lcd_driver:inst8.clk
clk_50 => dataToLcd:inst5.clk
clk_50 => UARTreceiver:inst.clk_50
clk_50 => RobotDriveTriangle:inst4.clk_50
clk_50 => motor_controller:inst6.clk_50
clk_50 => motor_controller:inst7.clk_50
serial_in => UARTreceiver:inst.serial
LCD_rw <= lcd_driver:inst8.rw
LCD_e <= lcd_driver:inst8.e
motorA1 <= motor_controller:inst6.motor_signal1
motorA2 <= motor_controller:inst6.motor_signal2
motorB1 <= motor_controller:inst7.motor_signal1
motorB2 <= motor_controller:inst7.motor_signal2
LCD_data[0] <= lcd_driver:inst8.dataOut[0]
LCD_data[1] <= lcd_driver:inst8.dataOut[1]
LCD_data[2] <= lcd_driver:inst8.dataOut[2]
LCD_data[3] <= lcd_driver:inst8.dataOut[3]
LCD_data[4] <= lcd_driver:inst8.dataOut[4]
LCD_data[5] <= lcd_driver:inst8.dataOut[5]
LCD_data[6] <= lcd_driver:inst8.dataOut[6]
LCD_data[7] <= lcd_driver:inst8.dataOut[7]


|UARTreader|lcd_driver:inst8
clk => dataStorage[0].CLK
clk => dataStorage[1].CLK
clk => dataStorage[2].CLK
clk => dataStorage[3].CLK
clk => dataStorage[4].CLK
clk => dataStorage[5].CLK
clk => dataStorage[6].CLK
clk => dataStorage[7].CLK
clk => addressStorage[0].CLK
clk => addressStorage[1].CLK
clk => addressStorage[2].CLK
clk => addressStorage[3].CLK
clk => addressStorage[4].CLK
clk => addressStorage[5].CLK
clk => addressStorage[6].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => state~1.DATAIN
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => counter.OUTPUTSELECT
rst_n => addressStorage.OUTPUTSELECT
rst_n => addressStorage.OUTPUTSELECT
rst_n => addressStorage.OUTPUTSELECT
rst_n => addressStorage.OUTPUTSELECT
rst_n => addressStorage.OUTPUTSELECT
rst_n => addressStorage.OUTPUTSELECT
rst_n => addressStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
rst_n => dataStorage.OUTPUTSELECT
dataIn[0] => dataStorage.DATAB
dataIn[1] => dataStorage.DATAB
dataIn[2] => dataStorage.DATAB
dataIn[3] => dataStorage.DATAB
dataIn[4] => dataStorage.DATAB
dataIn[5] => dataStorage.DATAB
dataIn[6] => dataStorage.DATAB
dataIn[7] => dataStorage.DATAB
posX[0] => addressStorage.DATAB
posX[1] => addressStorage.DATAB
posX[2] => Add0.IN6
posX[2] => addressStorage.DATAB
posX[2] => addressStorage.DATAB
posX[3] => Add0.IN5
posX[3] => addressStorage.DATAB
posX[3] => addressStorage.DATAB
posX[4] => Add0.IN4
posX[4] => addressStorage.DATAB
posX[4] => addressStorage.DATAB
posY[0] => Equal0.IN3
posY[0] => Equal1.IN3
posY[0] => Equal2.IN3
posY[1] => Equal0.IN2
posY[1] => Equal1.IN2
posY[1] => Equal2.IN2
write_n => process_0.IN0
clear_n => process_0.IN0
rs <= process_1.DB_MAX_OUTPUT_PORT_TYPE
rw <= <GND>
e <= process_1.DB_MAX_OUTPUT_PORT_TYPE
rdy <= rdy.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= dataOut.DB_MAX_OUTPUT_PORT_TYPE


|UARTreader|dataToLcd:inst5
clk => binaryToDecimal:converter1.clk
clk => lcd_write_n~reg0.CLK
clk => lcd_data[0]~reg0.CLK
clk => lcd_data[1]~reg0.CLK
clk => lcd_data[2]~reg0.CLK
clk => lcd_data[3]~reg0.CLK
clk => lcd_data[4]~reg0.CLK
clk => lcd_data[5]~reg0.CLK
clk => lcd_data[6]~reg0.CLK
clk => lcd_data[7]~reg0.CLK
clk => lcd_posY[0]~reg0.CLK
clk => lcd_posY[1]~reg0.CLK
clk => lcd_posX[0]~reg0.CLK
clk => lcd_posX[1]~reg0.CLK
clk => lcd_posX[2]~reg0.CLK
clk => lcd_posX[3]~reg0.CLK
clk => lcd_posX[4]~reg0.CLK
clk => display_state.CLK
clk => lineCount[0].CLK
clk => lineCount[1].CLK
clk => charCount[0].CLK
clk => charCount[1].CLK
clk => charCount[2].CLK
clk => charCount[3].CLK
clk => charCount[4].CLK
clk => display_counter[0].CLK
clk => display_counter[1].CLK
clk => display_counter[2].CLK
clk => display_counter[3].CLK
clk => display_counter[4].CLK
clk => display_counter[5].CLK
clk => display_counter[6].CLK
clk => display_counter[7].CLK
clk => display_counter[8].CLK
clk => display_counter[9].CLK
clk => display_counter[10].CLK
clk => display_counter[11].CLK
clk => display_counter[12].CLK
clk => display_counter[13].CLK
clk => display_counter[14].CLK
clk => display_counter[15].CLK
clk => display_counter[16].CLK
clk => display_counter[17].CLK
clk => display_counter[18].CLK
clk => display_counter[19].CLK
clk => display_counter[20].CLK
clk => display_counter[21].CLK
clk => display_counter[22].CLK
clk => display_counter[23].CLK
clk => display_counter[24].CLK
clk => display_counter[25].CLK
clk => display_counter[26].CLK
clk => display_counter[27].CLK
clk => display_counter[28].CLK
clk => display_counter[29].CLK
clk => display_counter[30].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => binaryToDecimal:converter3.clk
clk => state~3.DATAIN
heading[0] => binaryToDecimal:converter1.binaryIn[0]
heading[1] => binaryToDecimal:converter1.binaryIn[1]
heading[2] => binaryToDecimal:converter1.binaryIn[2]
heading[3] => binaryToDecimal:converter1.binaryIn[3]
heading[4] => binaryToDecimal:converter1.binaryIn[4]
heading[5] => binaryToDecimal:converter1.binaryIn[5]
heading[6] => binaryToDecimal:converter1.binaryIn[6]
heading[7] => binaryToDecimal:converter1.binaryIn[7]
heading[8] => binaryToDecimal:converter1.binaryIn[8]
target_heading[0] => binaryToDecimal:converter3.binaryIn[0]
target_heading[1] => binaryToDecimal:converter3.binaryIn[1]
target_heading[2] => binaryToDecimal:converter3.binaryIn[2]
target_heading[3] => binaryToDecimal:converter3.binaryIn[3]
target_heading[4] => binaryToDecimal:converter3.binaryIn[4]
target_heading[5] => binaryToDecimal:converter3.binaryIn[5]
target_heading[6] => binaryToDecimal:converter3.binaryIn[6]
target_heading[7] => binaryToDecimal:converter3.binaryIn[7]
target_heading[8] => binaryToDecimal:converter3.binaryIn[8]
lcd_ready => process_0.IN0
lcd_ready => process_0.IN1
lcd_data[0] <= lcd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[1] <= lcd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[2] <= lcd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[3] <= lcd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[4] <= lcd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[5] <= lcd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[6] <= lcd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[7] <= lcd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_posX[0] <= lcd_posX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_posX[1] <= lcd_posX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_posX[2] <= lcd_posX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_posX[3] <= lcd_posX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_posX[4] <= lcd_posX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_posY[0] <= lcd_posY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_posY[1] <= lcd_posY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_write_n <= lcd_write_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_clear_n <= <VCC>


|UARTreader|dataToLcd:inst5|binaryToDecimal:converter1
clk => digit_out_0[0].CLK
clk => digit_out_0[1].CLK
clk => digit_out_0[2].CLK
clk => digit_out_0[3].CLK
clk => digit_out_1[0].CLK
clk => digit_out_1[1].CLK
clk => digit_out_1[2].CLK
clk => digit_out_1[3].CLK
clk => digit_out_2[0].CLK
clk => digit_out_2[1].CLK
clk => digit_out_2[2].CLK
clk => digit_out_2[3].CLK
clk => digit_out_3[0].CLK
clk => digit_out_3[1].CLK
clk => digit_out_3[2].CLK
clk => digit_out_3[3].CLK
clk => digit_int_0[0].CLK
clk => digit_int_0[1].CLK
clk => digit_int_0[2].CLK
clk => digit_int_0[3].CLK
clk => digit_int_1[0].CLK
clk => digit_int_1[1].CLK
clk => digit_int_1[2].CLK
clk => digit_int_1[3].CLK
clk => digit_int_2[0].CLK
clk => digit_int_2[1].CLK
clk => digit_int_2[2].CLK
clk => digit_int_2[3].CLK
clk => digit_int_3[0].CLK
clk => digit_int_3[1].CLK
clk => digit_int_3[2].CLK
clk => digit_int_3[3].CLK
clk => number[0].CLK
clk => number[1].CLK
clk => number[2].CLK
clk => number[3].CLK
clk => number[4].CLK
clk => number[5].CLK
clk => number[6].CLK
clk => number[7].CLK
clk => number[8].CLK
clk => number[9].CLK
clk => number[10].CLK
clk => number[11].CLK
clk => state~7.DATAIN
binaryIn[0] => number[0].DATAIN
binaryIn[1] => number.DATAB
binaryIn[2] => number.DATAB
binaryIn[3] => number.DATAB
binaryIn[4] => number.DATAB
binaryIn[5] => number.DATAB
binaryIn[6] => number.DATAB
binaryIn[7] => number.DATAB
binaryIn[8] => number.DATAB
binaryIn[9] => number.DATAB
binaryIn[10] => number.DATAB
binaryIn[11] => number.DATAB
d3[0] <= digit_out_3[0].DB_MAX_OUTPUT_PORT_TYPE
d3[1] <= digit_out_3[1].DB_MAX_OUTPUT_PORT_TYPE
d3[2] <= digit_out_3[2].DB_MAX_OUTPUT_PORT_TYPE
d3[3] <= digit_out_3[3].DB_MAX_OUTPUT_PORT_TYPE
d2[0] <= digit_out_2[0].DB_MAX_OUTPUT_PORT_TYPE
d2[1] <= digit_out_2[1].DB_MAX_OUTPUT_PORT_TYPE
d2[2] <= digit_out_2[2].DB_MAX_OUTPUT_PORT_TYPE
d2[3] <= digit_out_2[3].DB_MAX_OUTPUT_PORT_TYPE
d1[0] <= digit_out_1[0].DB_MAX_OUTPUT_PORT_TYPE
d1[1] <= digit_out_1[1].DB_MAX_OUTPUT_PORT_TYPE
d1[2] <= digit_out_1[2].DB_MAX_OUTPUT_PORT_TYPE
d1[3] <= digit_out_1[3].DB_MAX_OUTPUT_PORT_TYPE
d0[0] <= digit_out_0[0].DB_MAX_OUTPUT_PORT_TYPE
d0[1] <= digit_out_0[1].DB_MAX_OUTPUT_PORT_TYPE
d0[2] <= digit_out_0[2].DB_MAX_OUTPUT_PORT_TYPE
d0[3] <= digit_out_0[3].DB_MAX_OUTPUT_PORT_TYPE


|UARTreader|dataToLcd:inst5|binaryToDecimal:converter3
clk => digit_out_0[0].CLK
clk => digit_out_0[1].CLK
clk => digit_out_0[2].CLK
clk => digit_out_0[3].CLK
clk => digit_out_1[0].CLK
clk => digit_out_1[1].CLK
clk => digit_out_1[2].CLK
clk => digit_out_1[3].CLK
clk => digit_out_2[0].CLK
clk => digit_out_2[1].CLK
clk => digit_out_2[2].CLK
clk => digit_out_2[3].CLK
clk => digit_out_3[0].CLK
clk => digit_out_3[1].CLK
clk => digit_out_3[2].CLK
clk => digit_out_3[3].CLK
clk => digit_int_0[0].CLK
clk => digit_int_0[1].CLK
clk => digit_int_0[2].CLK
clk => digit_int_0[3].CLK
clk => digit_int_1[0].CLK
clk => digit_int_1[1].CLK
clk => digit_int_1[2].CLK
clk => digit_int_1[3].CLK
clk => digit_int_2[0].CLK
clk => digit_int_2[1].CLK
clk => digit_int_2[2].CLK
clk => digit_int_2[3].CLK
clk => digit_int_3[0].CLK
clk => digit_int_3[1].CLK
clk => digit_int_3[2].CLK
clk => digit_int_3[3].CLK
clk => number[0].CLK
clk => number[1].CLK
clk => number[2].CLK
clk => number[3].CLK
clk => number[4].CLK
clk => number[5].CLK
clk => number[6].CLK
clk => number[7].CLK
clk => number[8].CLK
clk => number[9].CLK
clk => number[10].CLK
clk => number[11].CLK
clk => state~7.DATAIN
binaryIn[0] => number[0].DATAIN
binaryIn[1] => number.DATAB
binaryIn[2] => number.DATAB
binaryIn[3] => number.DATAB
binaryIn[4] => number.DATAB
binaryIn[5] => number.DATAB
binaryIn[6] => number.DATAB
binaryIn[7] => number.DATAB
binaryIn[8] => number.DATAB
binaryIn[9] => number.DATAB
binaryIn[10] => number.DATAB
binaryIn[11] => number.DATAB
d3[0] <= digit_out_3[0].DB_MAX_OUTPUT_PORT_TYPE
d3[1] <= digit_out_3[1].DB_MAX_OUTPUT_PORT_TYPE
d3[2] <= digit_out_3[2].DB_MAX_OUTPUT_PORT_TYPE
d3[3] <= digit_out_3[3].DB_MAX_OUTPUT_PORT_TYPE
d2[0] <= digit_out_2[0].DB_MAX_OUTPUT_PORT_TYPE
d2[1] <= digit_out_2[1].DB_MAX_OUTPUT_PORT_TYPE
d2[2] <= digit_out_2[2].DB_MAX_OUTPUT_PORT_TYPE
d2[3] <= digit_out_2[3].DB_MAX_OUTPUT_PORT_TYPE
d1[0] <= digit_out_1[0].DB_MAX_OUTPUT_PORT_TYPE
d1[1] <= digit_out_1[1].DB_MAX_OUTPUT_PORT_TYPE
d1[2] <= digit_out_1[2].DB_MAX_OUTPUT_PORT_TYPE
d1[3] <= digit_out_1[3].DB_MAX_OUTPUT_PORT_TYPE
d0[0] <= digit_out_0[0].DB_MAX_OUTPUT_PORT_TYPE
d0[1] <= digit_out_0[1].DB_MAX_OUTPUT_PORT_TYPE
d0[2] <= digit_out_0[2].DB_MAX_OUTPUT_PORT_TYPE
d0[3] <= digit_out_0[3].DB_MAX_OUTPUT_PORT_TYPE


|UARTreader|headingBuffer:inst3
heading_in[0] => heading[1].DATAIN
heading_in[1] => heading[2].DATAIN
heading_in[2] => heading[3].DATAIN
heading_in[3] => heading[4].DATAIN
heading_in[4] => heading[5].DATAIN
heading_in[5] => heading[6].DATAIN
heading_in[6] => heading[7].DATAIN
heading_in[7] => heading[8].DATAIN
dataReady => heading[0].CLK
dataReady => heading[1].CLK
dataReady => heading[2].CLK
dataReady => heading[3].CLK
dataReady => heading[4].CLK
dataReady => heading[5].CLK
dataReady => heading[6].CLK
dataReady => heading[7].CLK
dataReady => heading[8].CLK
heading_out[0] <= heading[0].DB_MAX_OUTPUT_PORT_TYPE
heading_out[1] <= heading[1].DB_MAX_OUTPUT_PORT_TYPE
heading_out[2] <= heading[2].DB_MAX_OUTPUT_PORT_TYPE
heading_out[3] <= heading[3].DB_MAX_OUTPUT_PORT_TYPE
heading_out[4] <= heading[4].DB_MAX_OUTPUT_PORT_TYPE
heading_out[5] <= heading[5].DB_MAX_OUTPUT_PORT_TYPE
heading_out[6] <= heading[6].DB_MAX_OUTPUT_PORT_TYPE
heading_out[7] <= heading[7].DB_MAX_OUTPUT_PORT_TYPE
heading_out[8] <= heading[8].DB_MAX_OUTPUT_PORT_TYPE


|UARTreader|UARTreceiver:inst
clk_50 => data[0]~reg0.CLK
clk_50 => data[1]~reg0.CLK
clk_50 => data[2]~reg0.CLK
clk_50 => data[3]~reg0.CLK
clk_50 => data[4]~reg0.CLK
clk_50 => data[5]~reg0.CLK
clk_50 => data[6]~reg0.CLK
clk_50 => data[7]~reg0.CLK
clk_50 => data_index[0].CLK
clk_50 => data_index[1].CLK
clk_50 => data_index[2].CLK
clk_50 => time_count[0].CLK
clk_50 => time_count[1].CLK
clk_50 => time_count[2].CLK
clk_50 => time_count[3].CLK
clk_50 => time_count[4].CLK
clk_50 => time_count[5].CLK
clk_50 => time_count[6].CLK
clk_50 => time_count[7].CLK
clk_50 => time_count[8].CLK
clk_50 => time_count[9].CLK
clk_50 => time_count[10].CLK
clk_50 => last_starting.CLK
clk_50 => dataReady~reg0.CLK
clk_50 => state~6.DATAIN
serial => data.DATAB
serial => data.DATAB
serial => data.DATAB
serial => data.DATAB
serial => data.DATAB
serial => data.DATAB
serial => data.DATAB
serial => data.DATAB
serial => dataReady.DATAB
serial => starting.CLK
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataReady <= dataReady~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UARTreader|RobotDriveTriangle:inst4
clk_50 => ~NO_FANOUT~
heading[0] => ~NO_FANOUT~
heading[1] => ~NO_FANOUT~
heading[2] => ~NO_FANOUT~
heading[3] => ~NO_FANOUT~
heading[4] => ~NO_FANOUT~
heading[5] => ~NO_FANOUT~
heading[6] => ~NO_FANOUT~
heading[7] => ~NO_FANOUT~
heading[8] => ~NO_FANOUT~
targetHeadingOut[0] <= targetHeadingOut[0].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[1] <= targetHeadingOut[1].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[2] <= targetHeadingOut[2].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[3] <= targetHeadingOut[3].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[4] <= targetHeadingOut[4].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[5] <= targetHeadingOut[5].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[6] <= targetHeadingOut[6].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[7] <= targetHeadingOut[7].DB_MAX_OUTPUT_PORT_TYPE
targetHeadingOut[8] <= targetHeadingOut[8].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[0] <= motorAspeed[0].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[1] <= motorAspeed[1].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[2] <= motorAspeed[2].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[3] <= motorAspeed[3].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[4] <= motorAspeed[4].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[5] <= motorAspeed[5].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[6] <= motorAspeed[6].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[7] <= motorAspeed[7].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[8] <= motorAspeed[8].DB_MAX_OUTPUT_PORT_TYPE
motorAspeed[9] <= motorAspeed[9].DB_MAX_OUTPUT_PORT_TYPE
motorAdirection <= motorAdirection.DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[0] <= motorBspeed[0].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[1] <= motorBspeed[1].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[2] <= motorBspeed[2].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[3] <= motorBspeed[3].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[4] <= motorBspeed[4].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[5] <= motorBspeed[5].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[6] <= motorBspeed[6].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[7] <= motorBspeed[7].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[8] <= motorBspeed[8].DB_MAX_OUTPUT_PORT_TYPE
motorBspeed[9] <= motorBspeed[9].DB_MAX_OUTPUT_PORT_TYPE
motorBdirection <= comb.DB_MAX_OUTPUT_PORT_TYPE


|UARTreader|motor_controller:inst6
clk_50 => c.CLK
clk_50 => cc[0].CLK
clk_50 => cc[1].CLK
clk_50 => cc[2].CLK
clk_50 => cc[3].CLK
clk_50 => cc[4].CLK
speed[0] => LessThan0.IN11
speed[1] => LessThan0.IN10
speed[2] => LessThan0.IN9
speed[3] => LessThan0.IN8
speed[4] => LessThan0.IN7
speed[5] => LessThan0.IN6
speed[6] => LessThan0.IN5
speed[7] => LessThan0.IN4
speed[8] => LessThan0.IN3
speed[9] => LessThan0.IN2
direction => motor_signal1.IN1
direction => motor_signal2.IN1
motor_signal1 <= motor_signal1.DB_MAX_OUTPUT_PORT_TYPE
motor_signal2 <= motor_signal2.DB_MAX_OUTPUT_PORT_TYPE


|UARTreader|motor_controller:inst7
clk_50 => c.CLK
clk_50 => cc[0].CLK
clk_50 => cc[1].CLK
clk_50 => cc[2].CLK
clk_50 => cc[3].CLK
clk_50 => cc[4].CLK
speed[0] => LessThan0.IN11
speed[1] => LessThan0.IN10
speed[2] => LessThan0.IN9
speed[3] => LessThan0.IN8
speed[4] => LessThan0.IN7
speed[5] => LessThan0.IN6
speed[6] => LessThan0.IN5
speed[7] => LessThan0.IN4
speed[8] => LessThan0.IN3
speed[9] => LessThan0.IN2
direction => motor_signal1.IN1
direction => motor_signal2.IN1
motor_signal1 <= motor_signal1.DB_MAX_OUTPUT_PORT_TYPE
motor_signal2 <= motor_signal2.DB_MAX_OUTPUT_PORT_TYPE


